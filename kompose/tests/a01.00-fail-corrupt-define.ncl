let module = import "./module.ncl" in
let {DeploymentType, StatefulsetType, ConfigmapType, ..} = import "./type.ncl" in
let {render, .. } = module in

let _nls_disable_format_by_bug_ = match { v => false } in

#first and second tree can't be merged into one.
let demo = {
    first = {
            deployment = {
                type = DeploymentType,
                object = {spec.image = "x"},
            },
            configmap = {
                type = ConfigmapType,
                object = {data = 1}
            }
    },
    second = {
        type = StatefulsetType,
        object = {spec.replica = 2222, spec.image = "SECOND"}
    },
  }
in
[demo.first, demo.second]

#=== --- result ---===

#> error: contract broken by a value
#>        can't merge two different components node: [1, 2]
#>      ┌─ <stdlib/std.ncl>:3170:25
#>      │
#> 3170 │     = fun msg => null | FailWith msg,
#>      │                         ------------ expected type
#>      │
#>      ┌─ <unknown> (generated by evaluation):1:1
#>      │
#>    1 │ null
#>      │ ---- evaluated to this value


